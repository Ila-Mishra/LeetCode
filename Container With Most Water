/*You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.
Notice that you may not slant the container.*/

/*Input: height = [1,8,6,2,5,4,8,3,7]
Output: 49
Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.*/

class Solution {
    public int maxArea(int[] height) {
        int l = 0;
        int r = height.length - 1; //8
        int res = 0; 
        
        while(l < r){
            int area = (Math.min(height[l], height[r]) * (r-l)); //1,7->1*7=7
            res = Math.max(res, area);//0,7->7
            
            //1>7
            if(height[l] > height[r]){
                r--;
            }else{
                l++;
            }
        }
        return res;
    }
}
