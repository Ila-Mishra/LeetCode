/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        
        return heightBalancedBST(nums, 0, nums.length-1);
        
    }
    
    public TreeNode heightBalancedBST(int[] nums, int start, int end){
        
        if(start>end){
            return null;
        }
        //Get middle element and make it root
        int mid = (start+end)/2;
        TreeNode node = new TreeNode(nums[mid]);
        //recursively, get middle of the left half and make it left child of root
        node.left = heightBalancedBST(nums, start, mid-1);
        //recursively, get middle of the right half and make it right child of root
        node.right = heightBalancedBST(nums, mid+1, end);
        
        return node;
    }
}
